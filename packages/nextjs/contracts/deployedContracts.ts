/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  421614: {
    RelayUltraVerifier: {
      address: "0x729fb6b0ae77f2E043F024e801970796516Eb2B0",
      abi: [
        {
          inputs: [],
          name: "EC_SCALAR_MUL_FAILURE",
          type: "error",
        },
        {
          inputs: [],
          name: "MOD_EXP_FAILURE",
          type: "error",
        },
        {
          inputs: [],
          name: "PROOF_FAILURE",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "expected",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "actual",
              type: "uint256",
            },
          ],
          name: "PUBLIC_INPUT_COUNT_INVALID",
          type: "error",
        },
        {
          inputs: [],
          name: "PUBLIC_INPUT_GE_P",
          type: "error",
        },
        {
          inputs: [],
          name: "PUBLIC_INPUT_INVALID_BN128_G1_POINT",
          type: "error",
        },
        {
          inputs: [],
          name: "getVerificationKeyHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "_proof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "_publicInputs",
              type: "bytes32[]",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    RelayVault: {
      address: "0x2587Da37f13A3caCd764171fee0220Ba5C33111d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_wIron",
              type: "address",
            },
            {
              internalType: "contract UserUltraVerifier",
              name: "_userProofVerifier",
              type: "address",
            },
            {
              internalType: "contract RelayUltraVerifier",
              name: "_relayProofVerifier",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_wIronPrice",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_wIronPriceDecimals",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_wIronDecimals",
              type: "uint8",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "memo",
              type: "string",
            },
          ],
          name: "Relay",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "priceFeed",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "assetDecimals",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "priceFeedDecimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "tokenAddress",
              type: "address",
            },
          ],
          name: "addSupportedAsset",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "assets",
          outputs: [
            {
              internalType: "address",
              name: "priceFeed",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "assetDecimals",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "priceFeedDecimals",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "supply",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "allowed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "relayPublicInputs",
              type: "bytes32[]",
            },
          ],
          name: "getRootSHA256",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "ironDecimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ironPrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ironPriceDecimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "userProof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "userPublicInputs",
              type: "bytes32[]",
            },
            {
              internalType: "bytes",
              name: "relayProof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "relayPublicInputs",
              type: "bytes32[]",
            },
            {
              internalType: "uint256",
              name: "amountToSpend",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "transferAsset",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "to",
              type: "address",
            },
            {
              internalType: "string",
              name: "memo",
              type: "string",
            },
          ],
          name: "relay",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "userProof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "userPublicInputs",
              type: "bytes32[]",
            },
            {
              internalType: "bytes",
              name: "relayProof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "relayPublicInputs",
              type: "bytes32[]",
            },
            {
              internalType: "uint256",
              name: "amountToSpend",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "to",
              type: "address",
            },
            {
              internalType: "string",
              name: "memo",
              type: "string",
            },
          ],
          name: "relayEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          name: "updateIronPrice",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "wIron",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    UserUltraVerifier: {
      address: "0x2D8c3Bfb3107302e839f546B14dDCC4eC8700d9a",
      abi: [
        {
          inputs: [],
          name: "EC_SCALAR_MUL_FAILURE",
          type: "error",
        },
        {
          inputs: [],
          name: "MOD_EXP_FAILURE",
          type: "error",
        },
        {
          inputs: [],
          name: "PROOF_FAILURE",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "expected",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "actual",
              type: "uint256",
            },
          ],
          name: "PUBLIC_INPUT_COUNT_INVALID",
          type: "error",
        },
        {
          inputs: [],
          name: "PUBLIC_INPUT_GE_P",
          type: "error",
        },
        {
          inputs: [],
          name: "PUBLIC_INPUT_INVALID_BN128_G1_POINT",
          type: "error",
        },
        {
          inputs: [],
          name: "getVerificationKeyHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "_proof",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "_publicInputs",
              type: "bytes32[]",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    WIRON: {
      address: "0x79270f6c9cB62A7522C8e897ADB111d712cFa7Df",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "metadata",
              type: "bytes",
            },
          ],
          name: "TransferWithMetadata",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burnFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "metadata",
              type: "bytes",
            },
          ],
          name: "transferWithMetadata",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        approve:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        decimals:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        decreaseAllowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        increaseAllowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        totalSupply:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        transfer:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        burn: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        burnFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        paused:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
